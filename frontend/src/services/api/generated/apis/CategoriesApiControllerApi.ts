/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiPageCategoryDto,
  CategoryDto,
  CreateCategoryDto,
  ErrorResponse,
} from '../models';
import {
    ApiPageCategoryDtoFromJSON,
    ApiPageCategoryDtoToJSON,
    CategoryDtoFromJSON,
    CategoryDtoToJSON,
    CreateCategoryDtoFromJSON,
    CreateCategoryDtoToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface CreateCategoryRequest {
    workspaceId: number;
    createCategoryDto: CreateCategoryDto;
}

export interface GetCategoriesRequest {
    workspaceId: number;
}

/**
 * 
 */
export class CategoriesApiControllerApi extends runtime.BaseAPI {

    /**
     */
    async createCategoryRaw(requestParameters: CreateCategoryRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CategoryDto>> {
        if (requestParameters.workspaceId === null || requestParameters.workspaceId === undefined) {
            throw new runtime.RequiredError('workspaceId','Required parameter requestParameters.workspaceId was null or undefined when calling createCategory.');
        }

        if (requestParameters.createCategoryDto === null || requestParameters.createCategoryDto === undefined) {
            throw new runtime.RequiredError('createCategoryDto','Required parameter requestParameters.createCategoryDto was null or undefined when calling createCategory.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/workspaces/{workspaceId}/categories`.replace(`{${"workspaceId"}}`, encodeURIComponent(String(requestParameters.workspaceId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCategoryDtoToJSON(requestParameters.createCategoryDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CategoryDtoFromJSON(jsonValue));
    }

    /**
     */
    async createCategory(requestParameters: CreateCategoryRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CategoryDto> {
        const response = await this.createCategoryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getCategoriesRaw(requestParameters: GetCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<ApiPageCategoryDto>> {
        if (requestParameters.workspaceId === null || requestParameters.workspaceId === undefined) {
            throw new runtime.RequiredError('workspaceId','Required parameter requestParameters.workspaceId was null or undefined when calling getCategories.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/workspaces/{workspaceId}/categories`.replace(`{${"workspaceId"}}`, encodeURIComponent(String(requestParameters.workspaceId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiPageCategoryDtoFromJSON(jsonValue));
    }

    /**
     */
    async getCategories(requestParameters: GetCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<ApiPageCategoryDto> {
        const response = await this.getCategoriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
