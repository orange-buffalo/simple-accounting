/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiPagePlatformUserDto,
  CreateUserRequestDto,
  PlatformUserDto,
} from '../models';
import {
    ApiPagePlatformUserDtoFromJSON,
    ApiPagePlatformUserDtoToJSON,
    CreateUserRequestDtoFromJSON,
    CreateUserRequestDtoToJSON,
    PlatformUserDtoFromJSON,
    PlatformUserDtoToJSON,
} from '../models';
import type { AdditionalRequestParameters, InitOverrideFunction } from '../runtime';

export interface CreateUserRequest {
    createUserRequestDto: CreateUserRequestDto;
}

export interface GetUsersRequest {
    sortBy?: GetUsersSortByEnum;
    freeSearchTextEq?: string;
    pageNumber?: number;
    pageSize?: number;
    sortOrder?: GetUsersSortOrderEnum;
}

/**
 * 
 */
export class UsersApiControllerApi<RM = void> extends runtime.BaseAPI<RM> {

    /**
     */
    async createUserRaw(requestParameters: CreateUserRequest, initOverrides?: RequestInit | InitOverrideFunction, additionalParameters?: AdditionalRequestParameters<RM>): Promise<runtime.ApiResponse<PlatformUserDto>> {
        if (requestParameters.createUserRequestDto === null || requestParameters.createUserRequestDto === undefined) {
            throw new runtime.RequiredError('createUserRequestDto','Required parameter requestParameters.createUserRequestDto was null or undefined when calling createUser.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateUserRequestDtoToJSON(requestParameters.createUserRequestDto),
        }, initOverrides, additionalParameters);

        return new runtime.JSONApiResponse(response, (jsonValue) => PlatformUserDtoFromJSON(jsonValue));
    }

    /**
     */
    async createUser(requestParameters: CreateUserRequest, initOverrides?: RequestInit | InitOverrideFunction, additionalParameters?: AdditionalRequestParameters<RM>): Promise<PlatformUserDto> {
        const response = await this.createUserRaw(requestParameters, initOverrides, additionalParameters);
        return await response.value();
    }

    /**
     */
    async getUsersRaw(requestParameters: GetUsersRequest, initOverrides?: RequestInit | InitOverrideFunction, additionalParameters?: AdditionalRequestParameters<RM>): Promise<runtime.ApiResponse<ApiPagePlatformUserDto>> {
        const queryParameters: any = {};

        if (requestParameters.sortBy !== undefined) {
            queryParameters['sortBy'] = requestParameters.sortBy;
        }

        if (requestParameters.freeSearchTextEq !== undefined) {
            queryParameters['freeSearchText[eq]'] = requestParameters.freeSearchTextEq;
        }

        if (requestParameters.pageNumber !== undefined) {
            queryParameters['pageNumber'] = requestParameters.pageNumber;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['pageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.sortOrder !== undefined) {
            queryParameters['sortOrder'] = requestParameters.sortOrder;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides, additionalParameters);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiPagePlatformUserDtoFromJSON(jsonValue));
    }

    /**
     */
    async getUsers(requestParameters: GetUsersRequest = {}, initOverrides?: RequestInit | InitOverrideFunction, additionalParameters?: AdditionalRequestParameters<RM>): Promise<ApiPagePlatformUserDto> {
        const response = await this.getUsersRaw(requestParameters, initOverrides, additionalParameters);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetUsersSortByEnum = {
    NotSupported: '_NOT_SUPPORTED'
} as const;
export type GetUsersSortByEnum = typeof GetUsersSortByEnum[keyof typeof GetUsersSortByEnum];
/**
 * @export
 */
export const GetUsersSortOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type GetUsersSortOrderEnum = typeof GetUsersSortOrderEnum[keyof typeof GetUsersSortOrderEnum];
