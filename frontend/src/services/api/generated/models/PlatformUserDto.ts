/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformUserDto
 */
export interface PlatformUserDto {
    /**
     * 
     * @type {string}
     * @memberof PlatformUserDto
     */
    userName: string;
    /**
     * 
     * @type {number}
     * @memberof PlatformUserDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof PlatformUserDto
     */
    version: number;
    /**
     * 
     * @type {boolean}
     * @memberof PlatformUserDto
     */
    admin: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PlatformUserDto
     */
    activated: boolean;
}

/**
 * Check if a given object implements the PlatformUserDto interface.
 */
export function instanceOfPlatformUserDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userName" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "admin" in value;
    isInstance = isInstance && "activated" in value;

    return isInstance;
}

export function PlatformUserDtoFromJSON(json: any): PlatformUserDto {
    return PlatformUserDtoFromJSONTyped(json, false);
}

export function PlatformUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformUserDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userName': json['userName'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': json['version'],
        'admin': json['admin'],
        'activated': json['activated'],
    };
}

export function PlatformUserDtoToJSON(value?: PlatformUserDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userName': value.userName,
        'id': value.id,
        'version': value.version,
        'admin': value.admin,
        'activated': value.activated,
    };
}

