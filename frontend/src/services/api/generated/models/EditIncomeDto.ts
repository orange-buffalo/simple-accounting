/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditIncomeDto
 */
export interface EditIncomeDto {
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    category?: number;
    /**
     * 
     * @type {Date}
     * @memberof EditIncomeDto
     */
    dateReceived: Date;
    /**
     * 
     * @type {string}
     * @memberof EditIncomeDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof EditIncomeDto
     */
    currency: string;
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    originalAmount: number;
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    convertedAmountInDefaultCurrency?: number;
    /**
     * 
     * @type {boolean}
     * @memberof EditIncomeDto
     */
    useDifferentExchangeRateForIncomeTaxPurposes: boolean;
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    incomeTaxableAmountInDefaultCurrency?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof EditIncomeDto
     */
    attachments?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof EditIncomeDto
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    generalTax?: number;
    /**
     * 
     * @type {number}
     * @memberof EditIncomeDto
     */
    linkedInvoice?: number;
}

export function EditIncomeDtoFromJSON(json: any): EditIncomeDto {
    return EditIncomeDtoFromJSONTyped(json, false);
}

export function EditIncomeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditIncomeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'category') ? undefined : json['category'],
        'dateReceived': (new Date(json['dateReceived'])),
        'title': json['title'],
        'currency': json['currency'],
        'originalAmount': json['originalAmount'],
        'convertedAmountInDefaultCurrency': !exists(json, 'convertedAmountInDefaultCurrency') ? undefined : json['convertedAmountInDefaultCurrency'],
        'useDifferentExchangeRateForIncomeTaxPurposes': json['useDifferentExchangeRateForIncomeTaxPurposes'],
        'incomeTaxableAmountInDefaultCurrency': !exists(json, 'incomeTaxableAmountInDefaultCurrency') ? undefined : json['incomeTaxableAmountInDefaultCurrency'],
        'attachments': !exists(json, 'attachments') ? undefined : json['attachments'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'generalTax': !exists(json, 'generalTax') ? undefined : json['generalTax'],
        'linkedInvoice': !exists(json, 'linkedInvoice') ? undefined : json['linkedInvoice'],
    };
}

export function EditIncomeDtoToJSON(value?: EditIncomeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'dateReceived': (value.dateReceived.toISOString().substr(0,10)),
        'title': value.title,
        'currency': value.currency,
        'originalAmount': value.originalAmount,
        'convertedAmountInDefaultCurrency': value.convertedAmountInDefaultCurrency,
        'useDifferentExchangeRateForIncomeTaxPurposes': value.useDifferentExchangeRateForIncomeTaxPurposes,
        'incomeTaxableAmountInDefaultCurrency': value.incomeTaxableAmountInDefaultCurrency,
        'attachments': value.attachments,
        'notes': value.notes,
        'generalTax': value.generalTax,
        'linkedInvoice': value.linkedInvoice,
    };
}

