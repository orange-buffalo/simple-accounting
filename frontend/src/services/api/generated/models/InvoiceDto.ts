/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceDto
 */
export interface InvoiceDto {
    /**
     * 
     * @type {string}
     * @memberof InvoiceDto
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDto
     */
    customer: number;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDto
     */
    timeRecorded: Date;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDto
     */
    dateIssued: Date;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDto
     */
    dateSent?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDto
     */
    datePaid?: Date;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDto
     */
    dueDate: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDto
     */
    currency: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDto
     */
    amount: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof InvoiceDto
     */
    attachments: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDto
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDto
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDto
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDto
     */
    status: InvoiceDtoStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDto
     */
    generalTax?: number;
}


/**
 * @export
 */
export const InvoiceDtoStatusEnum = {
    Draft: 'DRAFT',
    Sent: 'SENT',
    Overdue: 'OVERDUE',
    Paid: 'PAID',
    Cancelled: 'CANCELLED'
} as const;
export type InvoiceDtoStatusEnum = typeof InvoiceDtoStatusEnum[keyof typeof InvoiceDtoStatusEnum];


/**
 * Check if a given object implements the InvoiceDto interface.
 */
export function instanceOfInvoiceDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "customer" in value;
    isInstance = isInstance && "timeRecorded" in value;
    isInstance = isInstance && "dateIssued" in value;
    isInstance = isInstance && "dueDate" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "attachments" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function InvoiceDtoFromJSON(json: any): InvoiceDto {
    return InvoiceDtoFromJSONTyped(json, false);
}

export function InvoiceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'customer': json['customer'],
        'timeRecorded': (new Date(json['timeRecorded'])),
        'dateIssued': (new Date(json['dateIssued'])),
        'dateSent': !exists(json, 'dateSent') ? undefined : (new Date(json['dateSent'])),
        'datePaid': !exists(json, 'datePaid') ? undefined : (new Date(json['datePaid'])),
        'dueDate': (new Date(json['dueDate'])),
        'currency': json['currency'],
        'amount': json['amount'],
        'attachments': json['attachments'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'id': json['id'],
        'version': json['version'],
        'status': json['status'],
        'generalTax': !exists(json, 'generalTax') ? undefined : json['generalTax'],
    };
}

export function InvoiceDtoToJSON(value?: InvoiceDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'customer': value.customer,
        'timeRecorded': (value.timeRecorded.toISOString()),
        'dateIssued': (new Date(value.dateIssued.getTime() - value.dateIssued.getTimezoneOffset()*60*1000).toISOString().substr(0,10)),
        'dateSent': value.dateSent === undefined ? undefined : (new Date(value.dateSent.getTime() - value.dateSent.getTimezoneOffset()*60*1000).toISOString().substr(0,10)),
        'datePaid': value.datePaid === undefined ? undefined : (new Date(value.datePaid.getTime() - value.datePaid.getTimezoneOffset()*60*1000).toISOString().substr(0,10)),
        'dueDate': (new Date(value.dueDate.getTime() - value.dueDate.getTimezoneOffset()*60*1000).toISOString().substr(0,10)),
        'currency': value.currency,
        'amount': value.amount,
        'attachments': value.attachments,
        'notes': value.notes,
        'id': value.id,
        'version': value.version,
        'status': value.status,
        'generalTax': value.generalTax,
    };
}

