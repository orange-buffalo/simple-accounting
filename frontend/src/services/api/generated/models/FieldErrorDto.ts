/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FieldErrorDto
 */
export interface FieldErrorDto {
    /**
     * 
     * @type {string}
     * @memberof FieldErrorDto
     */
    field: string;
    /**
     * 
     * @type {string}
     * @memberof FieldErrorDto
     */
    error: string;
    /**
     * 
     * @type {string}
     * @memberof FieldErrorDto
     */
    message: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof FieldErrorDto
     */
    params?: { [key: string]: string; };
}

/**
 * Check if a given object implements the FieldErrorDto interface.
 */
export function instanceOfFieldErrorDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "field" in value;
    isInstance = isInstance && "error" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function FieldErrorDtoFromJSON(json: any): FieldErrorDto {
    return FieldErrorDtoFromJSONTyped(json, false);
}

export function FieldErrorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldErrorDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'field': json['field'],
        'error': json['error'],
        'message': json['message'],
        'params': !exists(json, 'params') ? undefined : json['params'],
    };
}

export function FieldErrorDtoToJSON(value?: FieldErrorDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'field': value.field,
        'error': value.error,
        'message': value.message,
        'params': value.params,
    };
}

