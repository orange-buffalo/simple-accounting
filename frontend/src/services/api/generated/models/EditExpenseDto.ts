/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EditExpenseDto
 */
export interface EditExpenseDto {
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    category?: number;
    /**
     * 
     * @type {Date}
     * @memberof EditExpenseDto
     */
    datePaid: Date;
    /**
     * 
     * @type {string}
     * @memberof EditExpenseDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof EditExpenseDto
     */
    currency: string;
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    originalAmount: number;
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    convertedAmountInDefaultCurrency?: number;
    /**
     * 
     * @type {boolean}
     * @memberof EditExpenseDto
     */
    useDifferentExchangeRateForIncomeTaxPurposes: boolean;
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    incomeTaxableAmountInDefaultCurrency?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof EditExpenseDto
     */
    attachments?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    percentOnBusiness?: number;
    /**
     * 
     * @type {string}
     * @memberof EditExpenseDto
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof EditExpenseDto
     */
    generalTax?: number;
}

/**
 * Check if a given object implements the EditExpenseDto interface.
 */
export function instanceOfEditExpenseDto(value: object): value is EditExpenseDto {
    if (!('datePaid' in value) || value['datePaid'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('originalAmount' in value) || value['originalAmount'] === undefined) return false;
    if (!('useDifferentExchangeRateForIncomeTaxPurposes' in value) || value['useDifferentExchangeRateForIncomeTaxPurposes'] === undefined) return false;
    return true;
}

export function EditExpenseDtoFromJSON(json: any): EditExpenseDto {
    return EditExpenseDtoFromJSONTyped(json, false);
}

export function EditExpenseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditExpenseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'] == null ? undefined : json['category'],
        'datePaid': (new Date(json['datePaid'])),
        'title': json['title'],
        'currency': json['currency'],
        'originalAmount': json['originalAmount'],
        'convertedAmountInDefaultCurrency': json['convertedAmountInDefaultCurrency'] == null ? undefined : json['convertedAmountInDefaultCurrency'],
        'useDifferentExchangeRateForIncomeTaxPurposes': json['useDifferentExchangeRateForIncomeTaxPurposes'],
        'incomeTaxableAmountInDefaultCurrency': json['incomeTaxableAmountInDefaultCurrency'] == null ? undefined : json['incomeTaxableAmountInDefaultCurrency'],
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'percentOnBusiness': json['percentOnBusiness'] == null ? undefined : json['percentOnBusiness'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'generalTax': json['generalTax'] == null ? undefined : json['generalTax'],
    };
}

export function EditExpenseDtoToJSON(value?: EditExpenseDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'category': value['category'],
        'datePaid': ((value['datePaid']).toISOString().substring(0,10)),
        'title': value['title'],
        'currency': value['currency'],
        'originalAmount': value['originalAmount'],
        'convertedAmountInDefaultCurrency': value['convertedAmountInDefaultCurrency'],
        'useDifferentExchangeRateForIncomeTaxPurposes': value['useDifferentExchangeRateForIncomeTaxPurposes'],
        'incomeTaxableAmountInDefaultCurrency': value['incomeTaxableAmountInDefaultCurrency'],
        'attachments': value['attachments'],
        'percentOnBusiness': value['percentOnBusiness'],
        'notes': value['notes'],
        'generalTax': value['generalTax'],
    };
}

