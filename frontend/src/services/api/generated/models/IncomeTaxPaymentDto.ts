/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IncomeTaxPaymentDto
 */
export interface IncomeTaxPaymentDto {
    /**
     * 
     * @type {number}
     * @memberof IncomeTaxPaymentDto
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof IncomeTaxPaymentDto
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof IncomeTaxPaymentDto
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof IncomeTaxPaymentDto
     */
    timeRecorded: Date;
    /**
     * 
     * @type {Date}
     * @memberof IncomeTaxPaymentDto
     */
    datePaid: Date;
    /**
     * 
     * @type {Date}
     * @memberof IncomeTaxPaymentDto
     */
    reportingDate: Date;
    /**
     * 
     * @type {number}
     * @memberof IncomeTaxPaymentDto
     */
    amount: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof IncomeTaxPaymentDto
     */
    attachments: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof IncomeTaxPaymentDto
     */
    notes?: string;
}

/**
 * Check if a given object implements the IncomeTaxPaymentDto interface.
 */
export function instanceOfIncomeTaxPaymentDto(value: object): value is IncomeTaxPaymentDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('timeRecorded' in value) || value['timeRecorded'] === undefined) return false;
    if (!('datePaid' in value) || value['datePaid'] === undefined) return false;
    if (!('reportingDate' in value) || value['reportingDate'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('attachments' in value) || value['attachments'] === undefined) return false;
    return true;
}

export function IncomeTaxPaymentDtoFromJSON(json: any): IncomeTaxPaymentDto {
    return IncomeTaxPaymentDtoFromJSONTyped(json, false);
}

export function IncomeTaxPaymentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncomeTaxPaymentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'version': json['version'],
        'title': json['title'],
        'timeRecorded': (new Date(json['timeRecorded'])),
        'datePaid': (new Date(json['datePaid'])),
        'reportingDate': (new Date(json['reportingDate'])),
        'amount': json['amount'],
        'attachments': json['attachments'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function IncomeTaxPaymentDtoToJSON(value?: IncomeTaxPaymentDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'version': value['version'],
        'title': value['title'],
        'timeRecorded': ((value['timeRecorded']).toISOString()),
        'datePaid': ((value['datePaid']).toISOString().substring(0,10)),
        'reportingDate': ((value['reportingDate']).toISOString().substring(0,10)),
        'amount': value['amount'],
        'attachments': value['attachments'],
        'notes': value['notes'],
    };
}

