name: "Continuous Integration"

on: [push, pull_request]

jobs:
  build:
    name: "Build and Tests"
    runs-on: ubuntu-20.04

    steps:

    - name: "Context"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "Building in context of $GITHUB_CONTEXT"

    - name: "Checkout"
      uses: actions/checkout@v1

    - name: "Set up JDK"
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '11'

    - name: 'Set up Node.js'
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: "Set up Git"
      run: |
          gh_actor_profile="$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/users/${GITHUB_ACTOR}")"
          git config --global user.name "$(printf '%s' "$gh_actor_profile" | jq -r .name)"
          git config --global user.email "$(printf '%s' "$gh_actor_profile" | jq -r .email)"
          git status

    - name: "Create Version Tag"
      if: github.ref == 'refs/heads/master'
      run: |
          echo "Creating a new version tag"
          echo "Current repo state:"
          ./gradlew -q showInfo
        
          PROJECT_VERSION=$(./gradlew showVersion | grep "Version:" | sed -e 's/^Version: //' | sed -e 's/-SNAPSHOT//')
          echo -e "\nSetting $PROJECT_VERSION tag\n"
          git tag "$PROJECT_VERSION" -m "v$PROJECT_VERSION"
        
          echo "Repo state after new tag:"
          ./gradlew -q showInfo

    - name: "Build"
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: |
          ./gradlew assemble buildDockerImage \
            --scan --console=plain \
            -Pdocker.hub.username=orangebuffalo \
            -Pdocker.hub.password="$DOCKERHUB_TOKEN"

    - name: "Test"
      run: ./gradlew check --scan --console=plain

    - name: "Test (storybook)"
      run: |
          ./gradlew npmBuildStorybook --scan --console=plain
          ./gradlew storybookTest --scan --console=plain

    - name: "Save Failed Screenshots"
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: Storyshots Diff Files
        path: tests/build/storybookTest
        if-no-files-found: "ignore"

    - name: "Test (end-to-end)"
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: |
          ./gradlew e2eTest \
            -Pdocker.hub.username=orangebuffalo \
            -Pdocker.hub.password="$DOCKERHUB_TOKEN" \
            --scan --console=plain

    - name: "Report Test Coverage"
      uses: codecov/codecov-action@v1

    - name: "Publish"
      if: github.ref == 'refs/heads/master'
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: |
          ./gradlew pushDockerImage \
            --scan --console=plain \
            -Pdocker.hub.username=orangebuffalo \
            -Pdocker.hub.password="$DOCKERHUB_TOKEN"

    - name: "Push Version Tag"
      if: github.ref == 'refs/heads/master'
      run: |
        echo "Pushing tags to remote"
        remote_repo="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
        git push "${remote_repo}" --tags
        echo -e "\nPushed"
