name: "Continuous Integration"

on: [ push ]

jobs:
  build:
    name: "Build and Tests"
    runs-on: ubuntu-22.04

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v2
        with:
          comment_on_pr: false
          proc_trace_chart_show: false
          theme: dark

      - name: "Setup Project Environment"
        uses: ./.github/actions/setup-project-environment

      - name: "Build"
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: ./gradlew assemble --scan --console=plain --build-cache

      - name: "Test"
        run: |
          # Start thread dump collection in background
          .github/scripts/collect-thread-dumps.sh thread-dumps 30 40 &
          DUMP_PID=$!
          echo "Thread dump collector started with PID $DUMP_PID"
          
          # Run tests
          ./gradlew check --scan --console=plain --build-cache
          TEST_EXIT_CODE=$?
          
          # Stop thread dump collection
          kill $DUMP_PID 2>/dev/null || true
          wait $DUMP_PID 2>/dev/null || true
          
          exit $TEST_EXIT_CODE

      - name: "Test (screenshots)"
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: ./gradlew screenshotsTest --scan --console=plain --build-cache

      - name: "Test (end-to-end)"
        run: ./gradlew e2eTest --scan --console=plain --build-cache

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          report_paths: "**/build/test-results/**/TEST-*.xml"
          require_tests: false
          detailed_summary: true

      - name: "Save Thread Dumps"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: thread-dumps
          path: thread-dumps
          if-no-files-found: "ignore"

      - name: "Save Rendering Report"
        uses: actions/upload-artifact@v4
        with:
          name: rendering-report
          path: app/build/rendering-report
          if-no-files-found: "ignore"

      - name: "Save Playwright Traces"
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playwright-traces
          path: app/build/playwright-traces
          if-no-files-found: "ignore"

      - name: "Report Test Coverage"
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: "Publish (Pre-) Release"
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          JRELEASER_CONFIG_CONTENT: ${{ secrets.JRELEASER_CONFIG_CONTENT }}
        run: |
          mkdir -p ~/.jreleaser
          echo "$JRELEASER_CONFIG_CONTENT" > ~/.jreleaser/config.toml
          ./gradlew jib jreleaserFullRelease --scan --console=plain --build-cache \
                -Djib.to.auth.username=orangebuffalo \
                -Djib.to.auth.password="${{ secrets.dockerhub_token }}"
