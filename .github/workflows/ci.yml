name: "Continuous Integration"

on: [push, pull_request]

jobs:
  build:
    name: "Build and Tests"
    runs-on: ubuntu-18.04
    container: orangebuffalo/simple-accounting-ci:v1

    steps:

    - name: "Context"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "Building in context of $GITHUB_CONTEXT"

    - name: "Checkout"
      uses: actions/checkout@v1

    - name: "Initialize"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ci initialize

    - name: "Create Version Tag"
      if: github.ref == 'refs/heads/master'
      run: ci create-tag

    - name: "Build"
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: ./gradlew assemble buildDockerImage --scan --console=plain -Pdocker.hub.username=orangebuffalo -Pdocker.hub.password="$DOCKERHUB_TOKEN"

    - name: "Test"
      run: ./gradlew check --scan --console=plain

    - name: "Test (screenshot)"
      run: ./gradlew npmScreenshotTests --scan --console=plain

    - name: "Test (end-to-end)"
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: ./gradlew e2eTest -Pdocker.hub.username=orangebuffalo -Pdocker.hub.password="$DOCKERHUB_TOKEN" --scan --console=plain

    - name: "Publish"
      if: github.ref == 'refs/heads/master'
      env:
        DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
      run: ./gradlew pushDockerImage --scan --console=plain -Pdocker.hub.username=orangebuffalo -Pdocker.hub.password="$DOCKERHUB_TOKEN"

    - name: "Push Version Tag"
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ci push-tags
