openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: ""
  description: Generated server url
paths:
  /api/workspaces/{workspaceId}:
    put:
      tags:
      - workspaces-api
      operationId: editWorkspace
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditWorkspaceDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceDto"
  /api/workspaces/{workspaceId}/invoices/{invoiceId}:
    get:
      tags:
      - invoices-api
      operationId: getInvoice
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: invoiceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceDto"
    put:
      tags:
      - invoices-api
      operationId: updateInvoice
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: invoiceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditInvoiceDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceDto"
  /api/workspaces/{workspaceId}/incomes/{incomeId}:
    get:
      tags:
      - incomes-api
      operationId: getIncome
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: incomeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeDto"
    put:
      tags:
      - incomes-api
      operationId: updateIncome
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: incomeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditIncomeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeDto"
  /api/workspaces/{workspaceId}/income-tax-payments/{taxPaymentId}:
    get:
      tags:
      - income-tax-payments-api
      operationId: getTaxPayment
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: taxPaymentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeTaxPaymentDto"
    put:
      tags:
      - income-tax-payments-api
      operationId: updateTaxPayment
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: taxPaymentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditIncomeTaxPaymentDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeTaxPaymentDto"
  /api/workspaces/{workspaceId}/general-taxes/{taxId}:
    get:
      tags:
      - general-taxes-api
      operationId: getTax
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: taxId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralTaxDto"
    put:
      tags:
      - general-taxes-api
      operationId: updateTax
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: taxId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditGeneralTaxDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralTaxDto"
  /api/workspaces/{workspaceId}/expenses/{expenseId}:
    get:
      tags:
      - expenses-api
      operationId: getExpense
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: expenseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDto"
    put:
      tags:
      - expenses-api
      operationId: updateExpense
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: expenseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditExpenseDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDto"
  /api/workspaces/{workspaceId}/customers/{customerId}:
    get:
      tags:
      - customers-api
      operationId: getCustomer
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
    put:
      tags:
      - customers-api
      operationId: updateCustomer
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCustomerDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
  /api/users/{userId}:
    get:
      tags:
      - users-api
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformUserDto"
    put:
      tags:
      - users-api
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformUserDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersApiUpdateUserErrors"
  /api/profile:
    get:
      tags:
      - profile-api
      operationId: getProfile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
    put:
      tags:
      - profile-api
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
  /api/workspaces:
    get:
      tags:
      - workspaces-api
      operationId: getWorkspaces
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkspaceDto"
    post:
      tags:
      - workspaces-api
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceDto"
  /api/workspaces/{workspaceId}/workspace-access-tokens:
    get:
      tags:
      - workspace-access-tokens-api
      operationId: getAccessTokens
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageWorkspaceAccessTokenDto"
    post:
      tags:
      - workspace-access-tokens-api
      operationId: createAccessToken
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceAccessTokenDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceAccessTokenDto"
  /api/workspaces/{workspaceId}/invoices:
    get:
      tags:
      - invoices-api
      operationId: getInvoices
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: "freeSearchText[eq]"
        in: query
        required: false
        schema:
          type: string
      - name: "status[in]"
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
            - DRAFT
            - SENT
            - OVERDUE
            - PAID
            - CANCELLED
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageInvoiceDto"
    post:
      tags:
      - invoices-api
      operationId: createInvoice
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditInvoiceDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceDto"
  /api/workspaces/{workspaceId}/invoices/{invoiceId}/cancel:
    post:
      tags:
      - invoices-api
      operationId: cancelInvoice
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: invoiceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceDto"
  /api/workspaces/{workspaceId}/incomes:
    get:
      tags:
      - incomes-api
      operationId: getIncomes
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: "freeSearchText[eq]"
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageIncomeDto"
    post:
      tags:
      - incomes-api
      operationId: createIncome
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditIncomeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeDto"
  /api/workspaces/{workspaceId}/income-tax-payments:
    get:
      tags:
      - income-tax-payments-api
      operationId: getTaxPayments
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageIncomeTaxPaymentDto"
    post:
      tags:
      - income-tax-payments-api
      operationId: createTaxPayment
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditIncomeTaxPaymentDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeTaxPaymentDto"
  /api/workspaces/{workspaceId}/general-taxes:
    get:
      tags:
      - general-taxes-api
      operationId: getTaxes
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageGeneralTaxDto"
    post:
      tags:
      - general-taxes-api
      operationId: createTax
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditGeneralTaxDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralTaxDto"
  /api/workspaces/{workspaceId}/expenses:
    get:
      tags:
      - expenses-api
      operationId: getExpenses
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: "freeSearchText[eq]"
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageExpenseDto"
    post:
      tags:
      - expenses-api
      operationId: createExpense
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditExpenseDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseDto"
  /api/workspaces/{workspaceId}/documents:
    get:
      tags:
      - documents-api
      operationId: getDocuments
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: "id[in]"
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: "id[eq]"
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageDocumentDto"
    post:
      tags:
      - documents-api
      operationId: uploadNewDocument
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentDto"
  /api/workspaces/{workspaceId}/customers:
    get:
      tags:
      - customers-api
      operationId: getCustomers
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageCustomerDto"
    post:
      tags:
      - customers-api
      operationId: createCustomer
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCustomerDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
  /api/workspaces/{workspaceId}/categories:
    get:
      tags:
      - categories-api
      operationId: getCategories
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPageCategoryDto"
    post:
      tags:
      - categories-api
      operationId: createCategory
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryDto"
  /api/users:
    get:
      tags:
      - users-api
      operationId: getUsers
      parameters:
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum:
          - _NOT_SUPPORTED
      - name: "freeSearchText[eq]"
        in: query
        required: false
        schema:
          type: string
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiPagePlatformUserDto"
    post:
      tags:
      - users-api
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequestDto"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformUserDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersApiCreateUserErrors"
  /api/user-activation-tokens:
    post:
      tags:
      - user-activation-tokens-api
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserActivationTokenRequestDto"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivationTokenDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivationTokensApiCreateTokenErrors"
  /api/user-activation-tokens/{token}/activate:
    post:
      tags:
      - user-activation-tokens-api
      operationId: activateUser
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserActivationRequestDto"
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivationTokensApiActivateUserErrors"
  /api/shared-workspaces:
    get:
      tags:
      - workspaces-api
      operationId: getSharedWorkspaces
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkspaceDto"
    post:
      tags:
      - workspaces-api
      operationId: saveSharedWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveSharedWorkspaceRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceDto"
  /api/profile/change-password:
    post:
      tags:
      - profile-api
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequestDto"
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileApiChangePasswordErrors"
  /api/auth/token:
    post:
      tags:
      - authentication-api
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/auth/oauth2/callback:
    post:
      tags:
      - o-auth-2-callback-api
      operationId: authCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OAuth2AuthorizationCallbackRequest"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: OK
          content: {}
  /api/auth/logout:
    post:
      tags:
      - authentication-api
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/auth/login:
    post:
      tags:
      - authentication-api
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/auth/login-by-token:
    post:
      tags:
      - authentication-api
      operationId: loginBySharedWorkspaceToken
      parameters:
      - name: sharedWorkspaceToken
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/workspaces/{workspaceId}/statistics/incomes:
    get:
      tags:
      - statistics-api
      operationId: getIncomesStatistics
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomesExpensesStatisticsDto"
  /api/workspaces/{workspaceId}/statistics/income-tax-payments:
    get:
      tags:
      - statistics-api
      operationId: getTaxPaymentsStatistics
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeTaxPaymentsStatisticsDto"
  /api/workspaces/{workspaceId}/statistics/expenses:
    get:
      tags:
      - statistics-api
      operationId: getExpensesStatistics
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomesExpensesStatisticsDto"
  /api/workspaces/{workspaceId}/statistics/currencies-shortlist:
    get:
      tags:
      - statistics-api
      operationId: getCurrenciesShortlist
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/workspaces/{workspaceId}/reporting/general-taxes:
    get:
      tags:
      - reporting-api
      operationId: getGeneralTaxReport
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: toDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralTaxReportDto"
  /api/workspaces/{workspaceId}/documents/{documentId}/download-token:
    get:
      tags:
      - documents-api
      operationId: getDownloadToken
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDownloadTokenResponse"
  /api/workspaces/{workspaceId}/documents/{documentId}/content:
    get:
      tags:
      - documents-api
      operationId: getDocumentContent
      parameters:
      - name: workspaceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataBuffer"
  /api/user-activation-tokens/{token}:
    get:
      tags:
      - user-activation-tokens-api
      operationId: getToken
      parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivationTokenDto"
  /api/user-activation-tokens/users/{userId}:
    get:
      tags:
      - user-activation-tokens-api
      operationId: getTokenByUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserActivationTokenDto"
  /api/storage/google-drive/status:
    get:
      tags:
      - google-drive-storage-api
      operationId: getIntegrationStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleDriveStorageIntegrationStatus"
  /api/push-notifications:
    get:
      tags:
      - push-notifications-api
      operationId: getPushNotificationMessages
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CurrentUserPushNotificationMessage"
  /api/profile/documents-storage:
    get:
      tags:
      - profile-api
      operationId: getDocumentsStorageStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentsStorageStatus"
  /api/downloads:
    get:
      tags:
      - downloads-api
      operationId: getContent
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataBuffer"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        errorId:
          type: string
      required:
      - errorId
    EditWorkspaceDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 0
      required:
      - name
    WorkspaceDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        name:
          type: string
        defaultCurrency:
          type: string
        editable:
          type: boolean
      required:
      - defaultCurrency
      - editable
      - name
      - version
    EditInvoiceDto:
      type: object
      properties:
        title:
          type: string
        customer:
          type: integer
          format: int64
        dateIssued:
          type: string
          format: date
        dateSent:
          type: string
          format: date
        datePaid:
          type: string
          format: date
        dateCancelled:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        currency:
          type: string
        amount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
          maxLength: 1024
          minLength: 0
        generalTax:
          type: integer
          format: int64
      required:
      - amount
      - currency
      - customer
      - dateIssued
      - dueDate
      - title
    InvoiceDto:
      type: object
      properties:
        title:
          type: string
        customer:
          type: integer
          format: int64
        timeRecorded:
          type: string
          format: date-time
        dateIssued:
          type: string
          format: date
        dateSent:
          type: string
          format: date
        datePaid:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        currency:
          type: string
        amount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - DRAFT
          - SENT
          - OVERDUE
          - PAID
          - CANCELLED
        generalTax:
          type: integer
          format: int64
      required:
      - amount
      - attachments
      - currency
      - customer
      - dateIssued
      - dueDate
      - id
      - status
      - timeRecorded
      - title
      - version
    EditIncomeDto:
      type: object
      properties:
        category:
          type: integer
          format: int64
        dateReceived:
          type: string
          format: date
        title:
          type: string
        currency:
          type: string
        originalAmount:
          type: integer
          format: int64
        convertedAmountInDefaultCurrency:
          type: integer
          format: int64
        useDifferentExchangeRateForIncomeTaxPurposes:
          type: boolean
        incomeTaxableAmountInDefaultCurrency:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
          maxLength: 1024
          minLength: 0
        generalTax:
          type: integer
          format: int64
        linkedInvoice:
          type: integer
          format: int64
      required:
      - currency
      - dateReceived
      - originalAmount
      - title
      - useDifferentExchangeRateForIncomeTaxPurposes
    IncomeAmountsDto:
      type: object
      properties:
        originalAmountInDefaultCurrency:
          type: integer
          format: int64
        adjustedAmountInDefaultCurrency:
          type: integer
          format: int64
    IncomeDto:
      type: object
      properties:
        category:
          type: integer
          format: int64
        title:
          type: string
        timeRecorded:
          type: string
          format: date-time
        dateReceived:
          type: string
          format: date
        currency:
          type: string
        originalAmount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - FINALIZED
          - PENDING_CONVERSION
          - PENDING_CONVERSION_FOR_TAXATION_PURPOSES
        linkedInvoice:
          type: integer
          format: int64
        generalTax:
          type: integer
          format: int64
        generalTaxRateInBps:
          type: integer
          format: int32
        generalTaxAmount:
          type: integer
          format: int64
        convertedAmounts:
          $ref: "#/components/schemas/IncomeAmountsDto"
        incomeTaxableAmounts:
          $ref: "#/components/schemas/IncomeAmountsDto"
        useDifferentExchangeRateForIncomeTaxPurposes:
          type: boolean
      required:
      - attachments
      - convertedAmounts
      - currency
      - dateReceived
      - id
      - incomeTaxableAmounts
      - originalAmount
      - status
      - timeRecorded
      - title
      - useDifferentExchangeRateForIncomeTaxPurposes
      - version
    EditIncomeTaxPaymentDto:
      type: object
      properties:
        datePaid:
          type: string
          format: date
        reportingDate:
          type: string
          format: date
        amount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
        title:
          type: string
      required:
      - amount
      - datePaid
      - title
    IncomeTaxPaymentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        title:
          type: string
        timeRecorded:
          type: string
          format: date-time
        datePaid:
          type: string
          format: date
        reportingDate:
          type: string
          format: date
        amount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        notes:
          type: string
      required:
      - amount
      - attachments
      - datePaid
      - id
      - reportingDate
      - timeRecorded
      - title
      - version
    EditGeneralTaxDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        rateInBps:
          type: integer
          format: int32
          maximum: 10000
          minimum: 0
      required:
      - rateInBps
      - title
    GeneralTaxDto:
      type: object
      properties:
        title:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        description:
          type: string
        rateInBps:
          type: integer
          format: int32
      required:
      - id
      - rateInBps
      - title
      - version
    EditExpenseDto:
      type: object
      properties:
        category:
          type: integer
          format: int64
        datePaid:
          type: string
          format: date
        title:
          type: string
        currency:
          type: string
        originalAmount:
          type: integer
          format: int64
        convertedAmountInDefaultCurrency:
          type: integer
          format: int64
        useDifferentExchangeRateForIncomeTaxPurposes:
          type: boolean
        incomeTaxableAmountInDefaultCurrency:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        percentOnBusiness:
          type: integer
          format: int32
        notes:
          type: string
          maxLength: 1024
          minLength: 0
        generalTax:
          type: integer
          format: int64
      required:
      - currency
      - datePaid
      - originalAmount
      - title
      - useDifferentExchangeRateForIncomeTaxPurposes
    ExpenseAmountsDto:
      type: object
      properties:
        originalAmountInDefaultCurrency:
          type: integer
          format: int64
        adjustedAmountInDefaultCurrency:
          type: integer
          format: int64
    ExpenseDto:
      type: object
      properties:
        category:
          type: integer
          format: int64
        title:
          type: string
        timeRecorded:
          type: string
          format: date-time
        datePaid:
          type: string
          format: date
        currency:
          type: string
        originalAmount:
          type: integer
          format: int64
        attachments:
          type: array
          items:
            type: integer
            format: int64
        percentOnBusiness:
          type: integer
          format: int32
        notes:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - FINALIZED
          - PENDING_CONVERSION
          - PENDING_CONVERSION_FOR_TAXATION_PURPOSES
        generalTax:
          type: integer
          format: int64
        generalTaxRateInBps:
          type: integer
          format: int32
        generalTaxAmount:
          type: integer
          format: int64
        convertedAmounts:
          $ref: "#/components/schemas/ExpenseAmountsDto"
        incomeTaxableAmounts:
          $ref: "#/components/schemas/ExpenseAmountsDto"
        useDifferentExchangeRateForIncomeTaxPurposes:
          type: boolean
      required:
      - attachments
      - convertedAmounts
      - currency
      - datePaid
      - id
      - incomeTaxableAmounts
      - originalAmount
      - percentOnBusiness
      - status
      - timeRecorded
      - title
      - useDifferentExchangeRateForIncomeTaxPurposes
      - version
    EditCustomerDto:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    CustomerDto:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
      required:
      - id
      - name
      - version
    UpdateUserRequestDto:
      type: object
      properties:
        userName:
          type: string
          maxLength: 255
          minLength: 0
      required:
      - userName
    PlatformUserDto:
      type: object
      properties:
        userName:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        admin:
          type: boolean
        activated:
          type: boolean
      required:
      - activated
      - admin
      - userName
      - version
    I18nSettingsDto:
      type: object
      properties:
        locale:
          type: string
          maxLength: 36
          minLength: 0
        language:
          type: string
          maxLength: 36
          minLength: 0
      required:
      - language
      - locale
    UpdateProfileRequestDto:
      type: object
      properties:
        documentsStorage:
          type: string
          maxLength: 255
          minLength: 0
        i18n:
          $ref: "#/components/schemas/I18nSettingsDto"
      required:
      - i18n
    ProfileDto:
      type: object
      properties:
        userName:
          type: string
        documentsStorage:
          type: string
        i18n:
          $ref: "#/components/schemas/I18nSettingsDto"
      required:
      - i18n
      - userName
    CreateWorkspaceDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 0
        defaultCurrency:
          type: string
          maxLength: 3
          minLength: 0
      required:
      - defaultCurrency
      - name
    CreateWorkspaceAccessTokenDto:
      type: object
      properties:
        validTill:
          type: string
          format: date-time
      required:
      - validTill
    WorkspaceAccessTokenDto:
      type: object
      properties:
        validTill:
          type: string
          format: date-time
        revoked:
          type: boolean
        token:
          type: string
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
      required:
      - id
      - revoked
      - token
      - validTill
      - version
    DocumentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        name:
          type: string
        timeUploaded:
          type: string
          format: date-time
        sizeInBytes:
          type: integer
          format: int64
      required:
      - id
      - name
      - timeUploaded
      - version
    CreateCategoryDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        income:
          type: boolean
        expense:
          type: boolean
      required:
      - expense
      - income
      - name
    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        income:
          type: boolean
        expense:
          type: boolean
      required:
      - expense
      - income
      - name
      - version
    CreateUserRequestDto:
      type: object
      properties:
        userName:
          type: string
          maxLength: 255
          minLength: 0
        admin:
          type: boolean
      required:
      - admin
      - userName
    CreateUserActivationTokenRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
      required:
      - userId
    UserActivationTokenDto:
      type: object
      properties:
        token:
          type: string
        expiresAt:
          type: string
          format: date-time
      required:
      - expiresAt
      - token
    UserActivationRequestDto:
      type: object
      properties:
        password:
          type: string
          maxLength: 100
          minLength: 0
      required:
      - password
    SaveSharedWorkspaceRequestDto:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    ChangePasswordRequestDto:
      type: object
      properties:
        currentPassword:
          type: string
          maxLength: 100
          minLength: 0
        newPassword:
          type: string
          maxLength: 100
          minLength: 0
      required:
      - currentPassword
      - newPassword
    TokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    OAuth2AuthorizationCallbackRequest:
      type: object
      properties:
        code:
          type: string
        error:
          type: string
        state:
          type: string
      required:
      - state
    LoginRequest:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
        rememberMe:
          type: boolean
      required:
      - password
      - rememberMe
      - userName
    ApiPageWorkspaceAccessTokenDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceAccessTokenDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    IncomeExpensesStatisticsItemDto:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        totalAmount:
          type: integer
          format: int64
        finalizedCount:
          type: integer
          format: int64
        pendingCount:
          type: integer
          format: int64
        currencyExchangeDifference:
          type: integer
          format: int64
      required:
      - currencyExchangeDifference
      - finalizedCount
      - pendingCount
      - totalAmount
    IncomesExpensesStatisticsDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/IncomeExpensesStatisticsItemDto"
        totalAmount:
          type: integer
          format: int64
        finalizedCount:
          type: integer
          format: int64
        pendingCount:
          type: integer
          format: int64
        currencyExchangeDifference:
          type: integer
          format: int64
      required:
      - currencyExchangeDifference
      - finalizedCount
      - items
      - pendingCount
      - totalAmount
    IncomeTaxPaymentsStatisticsDto:
      type: object
      properties:
        totalTaxPayments:
          type: integer
          format: int64
      required:
      - totalTaxPayments
    FinalizedTaxSummaryItemDto:
      type: object
      properties:
        tax:
          type: integer
          format: int64
        taxAmount:
          type: integer
          format: int64
        includedItemsNumber:
          type: integer
          format: int64
        includedItemsAmount:
          type: integer
          format: int64
      required:
      - includedItemsAmount
      - includedItemsNumber
      - tax
      - taxAmount
    GeneralTaxReportDto:
      type: object
      properties:
        finalizedCollectedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/FinalizedTaxSummaryItemDto"
        finalizedPaidTaxes:
          type: array
          items:
            $ref: "#/components/schemas/FinalizedTaxSummaryItemDto"
        pendingCollectedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/PendingTaxSummaryItemDto"
        pendingPaidTaxes:
          type: array
          items:
            $ref: "#/components/schemas/PendingTaxSummaryItemDto"
      required:
      - finalizedCollectedTaxes
      - finalizedPaidTaxes
      - pendingCollectedTaxes
      - pendingPaidTaxes
    PendingTaxSummaryItemDto:
      type: object
      properties:
        tax:
          type: integer
          format: int64
        includedItemsNumber:
          type: integer
          format: int64
      required:
      - includedItemsNumber
      - tax
    ApiPageInvoiceDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageIncomeDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncomeDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageIncomeTaxPaymentDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncomeTaxPaymentDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageGeneralTaxDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/GeneralTaxDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageExpenseDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/ExpenseDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageDocumentDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/DocumentDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    GetDownloadTokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    DataBuffer:
      type: object
    ApiPageCustomerDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/CustomerDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPageCategoryDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/CategoryDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    ApiPagePlatformUserDto:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/PlatformUserDto"
      required:
      - data
      - pageNumber
      - pageSize
      - totalElements
    GoogleDriveStorageIntegrationStatus:
      type: object
      properties:
        folderId:
          type: string
        folderName:
          type: string
        authorizationUrl:
          type: string
        authorizationRequired:
          type: boolean
      required:
      - authorizationRequired
    CurrentUserPushNotificationMessage:
      type: object
      properties:
        eventName:
          type: string
        data:
          type: object
      required:
      - eventName
    DocumentsStorageStatus:
      type: object
      properties:
        active:
          type: boolean
      required:
      - active
    ProfileApiChangePasswordErrors:
      type: object
      properties:
        error:
          type: string
          enum:
          - CurrentPasswordMismatch
          - TransientUser
          - NotAuthenticated
        message:
          type: string
      required:
      - error
    UserActivationTokensApiActivateUserErrors:
      type: object
      properties:
        error:
          type: string
          enum:
          - TokenExpired
        message:
          type: string
      required:
      - error
    UserActivationTokensApiCreateTokenErrors:
      type: object
      properties:
        error:
          type: string
          enum:
          - UserAlreadyActivated
        message:
          type: string
      required:
      - error
    UsersApiCreateUserErrors:
      type: object
      properties:
        error:
          type: string
          enum:
          - UserAlreadyExists
        message:
          type: string
      required:
      - error
    UsersApiUpdateUserErrors:
      type: object
      properties:
        error:
          type: string
          enum:
          - UserAlreadyExists
        message:
          type: string
      required:
      - error
    FieldErrorDto:
      type: object
      properties:
        field:
          type: string
        error:
          type: string
        message:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
      required:
      - error
      - field
      - message
    InvalidInputErrorDto:
      type: object
      properties:
        error:
          type: string
        requestErrors:
          type: array
          items:
            $ref: "#/components/schemas/FieldErrorDto"
      required:
      - error
      - requestErrors
    SaApiErrorDto:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
      - error
