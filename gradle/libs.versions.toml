[versions]
arrow = "1.2.1"
assertk = "0.28.0"
awaitility = "4.2.0"
guava = "32.1.3-jre"
imageComparison = "4.4.0"
javaxEl = "3.0.1-b12"
jib = "3.4.0"
jjwt = "0.11.5"
jooq = "3.18.7"
jsonUnit = "3.2.2"
kotest = "5.8.0"
kotlin = "1.9.21"
kotlinCoroutines = "1.7.3"
kotlinLogging = "3.0.5"
kotlinSerialization = "1.6.2"
kotlinSerializationPlugin = "1.9.21"
kotlinxDatetime = "0.5.0"
ktorVersion = "2.3.2"
mockito = "5.8.0"
mockitoKotlin = "2.2.0"
springBoot = "3.2.0"
springDependencyManagement = "1.1.4"
springdocOpenapi = "2.3.0"
testContainers = "1.19.3"
testContainersPlaywirght = "0.11.4"
wireMock = "3.0.1"
zjsonpatch = "0.4.16"
gitVersioningPlugin = "6.4.3"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
assertk = { module = "com.willowtreeapps.assertk:assertk-jvm", version.ref = "assertk" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
imageComparison = { module = "com.github.romankh3:image-comparison", version.ref = "imageComparison" }
javax-el = { module = "org.glassfish:javax.el", version.ref = "javaxEl" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }
jooq-metaExtensions = { module = "org.jooq:jooq-meta-extensions", version.ref = "jooq" }
jsonUnit-assertj = { module = "net.javacrumbs.json-unit:json-unit-assertj", version.ref = "jsonUnit" }
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
kotlinLogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinCoroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinCoroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinCoroutines" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }
ktor-clientCore = { module = "io.ktor:ktor-client-core", version.ref = "ktorVersion" }
ktor-clientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorVersion" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-kotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktorVersion" }
mockito-junitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockitoKotlin = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockitoKotlin" }
springdocOpenapi-starterCommon = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdocOpenapi" }
springdocOpenapi-webfluxApi = { module = "org.springdoc:springdoc-openapi-starter-webflux-api", version.ref = "springdocOpenapi" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testContainers" }
testcontainers-nginx = { module = "org.testcontainers:nginx", version.ref = "testContainers" }
testcontainers-playwright = { module = "io.orange-buffalo:testcontainers-playwright", version.ref = "testContainersPlaywirght" }
wiremock-jre8Standalone = { module = "com.github.tomakehurst:wiremock-jre8-standalone", version.ref = "wireMock" }
zjsonpatch = { module = "com.flipkart.zjsonpatch:zjsonpatch", version.ref = "zjsonpatch" }

[plugins]
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinSerializationPlugin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-dependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
gitVersioning = { id = "me.qoomon.git-versioning", version.ref = "gitVersioningPlugin" }
